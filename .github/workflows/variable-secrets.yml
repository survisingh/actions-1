name: Exploring Variable and Secrets

on: 
    push

env:
    CONTAINER_ReGISTRY: docker.io
    IMAGE_NAME: github-actions-nginx

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: echo docker build -t $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

        - name: Docker Login
          run: echo docker login --username=$DOCKER_USERNAME --password=${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Publish
          run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest

    deploy:
        needs: docker
        runs-on: ubuntu-latest
        steps:
        - name: Docker Run
          run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

##################### environment variable at JOb level  Workflow level ##############################################
### docker.io is container registry
### dockerUsername
### docker image name - imageName:Lates
### in workflow we can add non senstive value variables like: username or flag

##################### environment variable at JOb level ##############################################
##################### environment variables at STEP level ###################################################
#docker:
 #   runs-on: ubuntu-latest
   #  steps:
   #   - name: Docker Build
   #   env:
   #     CONTAINER_ReGISTRY: docker.io
   #     DOCKER_USERNAME: siddhart1
    #    IMAGE_NAME: github-actions-nginx
      #  run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

   # - name: Docker login
    #  env:
     # DOCKER_PASSWORD: s3cUrePaSsw0rd
      #DOCKER_USERNAME: siddhart
     # run: echo docker login --userName=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

   # - name: Docker Publish
    #  env:
     #   CONTAINER_ReGISTRY: docker.io
      #  DOCKER_USERNAME: siddhart1
       # IMAGE_NAME: github-actions-nginx
    #  run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#deploy:
 #   needs: docker
  #  runs-on: ubuntu-latest
   # steps:
    #- name: Docker Run
     # env:
      #  CONTAINER_ReGISTRY: docker.io
       # DOCKER_USERNAME: siddhart1
        #IMAGE_NAME: github-actions-nginx
      #  run: docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest